@model HomePageModel
@inject MedicDataLocalization medicDataLocalization

@{
    ViewData["Title"] = Model.Title;
}

<article>
    <header class="text-center">
        <h2>@medicDataLocalization.Get("Information")</h2>
        <h4>@($"{medicDataLocalization.Get("TotalPatients")}: {Model.PatientCount}")</h4>
    </header>
    <section>
        <section>
            <header class="text-center">
                <h4>@medicDataLocalization.Get("CPFilesSummary")</h4>
            </header>
            <div>
                <canvas id="cp-planned-procedures">
                </canvas>
            </div>
            <div>
                <canvas id="cp-ins">
                </canvas>
            </div>
            <div>
                <canvas id="cp-outs">
                </canvas>
            </div>
            <div>
                <canvas id="cp-protocol-drug-therapies">
                </canvas>
            </div>
            <div>
                <canvas id="cp-patient-transfers">
                </canvas>
            </div>
        </section>
        <section>
            <header class="text-center">
                <h4>@medicDataLocalization.Get("HospitalPracticesSummary")</h4>
            </header>
            <div>
                <canvas id="hospital-practice-clinic-procedures">
                </canvas>
            </div>
            <div>
                <canvas id="hospital-practice-path-procedures">
                </canvas>
            </div>
            <div>
                <canvas id="hospital-practice-disp-observations">
                </canvas>
            </div>
            <div>
                <canvas id="hospital-practice-commission-arps">
                </canvas>
            </div>
            <div>
                <canvas id="hospital-practice-drug-therapiest">
                </canvas>
            </div>
            <div>
                <canvas id="hospital-practice-patient-transfers">
                </canvas>
            </div>
        </section>
    </section>
</article>

@section Scripts {
    <environment names="Development">
        <script src="~/lib/chartjs/Chart.js"></script>
    </environment>
    <environment names="Production">
        <script src="~/lib/chartjs/Chart.min.js"></script>
    </environment>
    <script src="~/js/chart.js"></script>
    <script>
        (function () {
            window.addEventListener('load', showCharts);

            function showCharts(e) {
                const labelsCP = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.DateFrom.ToString("MM-yyyy"))));
                const labelsHP = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(cp => cp.DateFrom.ToString("MM-yyyy"))));

                const plannedProcedures = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.PlannedProceduresCount)));
                const ins = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.InsCount)));
                const outs = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.OutsCount)));
                const protocolDrugTherapies = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.ProtocolDrugTherapiesCount)));
                const patientTransfers = @Html.Raw(Json.Serialize(Model.CPFileSummaryViewModels.Select(cp => cp.PatientTransfersCount)));

                const inClinicProcedures = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.InClinicProceduresCount)));
                const pathProcedures = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.PathProceduresCount)));
                const dispObservations = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.DispObservationsCount)));
                const commissionAprs = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.CommissionAprsCount)));
                const protocolDrugHPTherapies = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.ProtocolDrugTherapiesCount)));
                const patientHPTransfers = @Html.Raw(Json.Serialize(Model.HospitalPracticeSummaryViewModels.Select(hp => hp.PatientTransfersCount)));

                const ppData = {
                    labels: labelsCP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("PlannedProcedures"))',
                            data: plannedProcedures,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const insData = {
                    labels: labelsCP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("Ins"))',
                            data: ins,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const outsData = {
                    labels: labelsCP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("Outs"))',
                            data: outs,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const protocolDrugTherapiesData = {
                    labels: labelsCP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("ProtocolDrugTherapies"))',
                            data: protocolDrugTherapies,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const patientTransfersData = {
                    labels: labelsCP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("PatientTransfers"))',
                            data: patientTransfers,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const inClinicProceduresData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("InClinicProcedures"))',
                            data: inClinicProcedures,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const pathProceduresData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("PathProcedures"))',
                            data: pathProcedures,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const dispObservationsData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("DispObservations"))',
                            data: dispObservations,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const commissionAprsData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("CommissionAprs"))',
                            data: commissionAprs,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const protocolDrugTherapiesHPData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("ProtocolDrugTherapies"))',
                            data: protocolDrugHPTherapies,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                const patientTransfersHPData = {
                    labels: labelsHP,
                    datasets: [
                        {
                            label: '@Html.Raw(medicDataLocalization.Get("PatientTransfers"))',
                            data: patientHPTransfers,
                            backgroundColor: "blue",
                            borderColor: "lightblue",
                            fill: false,
                            lineTension: 0,
                            radius: 5
                        }
                    ]
                };

                LineChart(document.querySelector('#cp-planned-procedures'), ppData, generateOptions('@Html.Raw(medicDataLocalization.Get("PlannedProcedures"))'));
                LineChart(document.querySelector('#cp-ins'), insData, generateOptions('@Html.Raw(medicDataLocalization.Get("Ins"))'));
                LineChart(document.querySelector('#cp-outs'), outsData, generateOptions('@Html.Raw(medicDataLocalization.Get("Outs"))'));
                LineChart(document.querySelector('#cp-protocol-drug-therapies'), protocolDrugTherapiesData, generateOptions('@Html.Raw(medicDataLocalization.Get("ProtocolDrugTherapies"))'));
                LineChart(document.querySelector('#cp-patient-transfers'), patientTransfersData, generateOptions('@Html.Raw(medicDataLocalization.Get("PatientTransfers"))'));

                LineChart(document.querySelector('#hospital-practice-clinic-procedures'), inClinicProceduresData, generateOptions('@Html.Raw(medicDataLocalization.Get("InClinicProcedures"))'));
                LineChart(document.querySelector('#hospital-practice-path-procedures'), pathProceduresData, generateOptions('@Html.Raw(medicDataLocalization.Get("PathProcedures"))'));
                LineChart(document.querySelector('#hospital-practice-disp-observations'), dispObservationsData, generateOptions('@Html.Raw(medicDataLocalization.Get("DispObservations"))'));
                LineChart(document.querySelector('#hospital-practice-commission-arps'), commissionAprsData, generateOptions('@Html.Raw(medicDataLocalization.Get("CommissionAprs"))'));
                LineChart(document.querySelector('#hospital-practice-drug-therapiest'), protocolDrugTherapiesHPData, generateOptions('@Html.Raw(medicDataLocalization.Get("ProtocolDrugTherapies"))'));
                LineChart(document.querySelector('#hospital-practice-patient-transfers'), patientTransfersHPData, generateOptions('@Html.Raw(medicDataLocalization.Get("PatientTransfers"))'));

                window.removeEventListener('load', showCharts);

                function generateOptions (text) {
                    return options = {
                        responsive: true,
                        title: {
                            display: true,
                            position: "top",
                            text: text,
                            fontSize: 18,
                            fontColor: "#111"
                        }
                    };
                }
            }
        })();
    </script>
}