@using Medic.AppModels.Ins
@inject MedicDataLocalization medicDataLocalization


@model InPageIndexModel

@{
    ViewData["Title"] = Model.Title;

    Dictionary<string, string> paramsByName = new Dictionary<string, string>();

    int pagesCount = Model.TotalCount % 10 != 0 ? (Model.TotalCount / 10) + 1 : Model.TotalCount / 10;

    if (Model.Search != default)
    {
        if (!string.IsNullOrWhiteSpace(Model.Search.MainDiagnose))
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.MainDiagnose)}", Model.Search.MainDiagnose);
        }

        if (Model.Search.CountOfAdditionalDiagnoses != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.CountOfAdditionalDiagnoses)}", Model.Search.CountOfAdditionalDiagnoses.ToString());
        }

        if (Model.Search.Sex != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.Sex)}", Model.Search.Sex.ToString());
        }

        if (Model.Search.HealthRegion != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.HealthRegion)}", Model.Search.HealthRegion.ToString());
        }

        if (Model.Search.Age != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.Age)}", Model.Search.Age.ToString());
        }

        if (Model.Search.OlderThan != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.OlderThan)}", Model.Search.OlderThan.ToString());
        }

        if (Model.Search.YoungerThan != default)
        {
            paramsByName.Add($"{nameof(Model.Search)}.{nameof(Model.Search.YoungerThan)}", Model.Search.YoungerThan.ToString());
        }
    }

}

<article>
    <header>
        <h2>@medicDataLocalization.Get("InsView"): @Model.TotalCount</h2>
    </header>
    <section>
        <form asp-controller="@MedicBaseController.GetName(nameof(InController))"
              asp-action="@nameof(InController.Index)"
              method="get">
            <div class="row">
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.MainDiagnose"></label>
                    <input class="form-control" asp-for="@Model.Search.MainDiagnose" />
                </div>
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.CountOfAdditionalDiagnoses"></label>
                    <input class="form-control" asp-for="@Model.Search.CountOfAdditionalDiagnoses" />
                </div>
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.Sex"></label>
                    <select class="form-control" asp-for="@Model.Search.Sex" asp-items="@Model.Sexes.Select(s => new SelectListItem(s.Name, s.Id.ToString(), s.Id == null))"></select>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.Age"></label>
                    <input class="form-control" asp-for="@Model.Search.Age" />
                </div>
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.OlderThan"></label>
                    <input class="form-control" asp-for="@Model.Search.OlderThan" />
                </div>
                <div class="form-group col-sm-4">
                    <label asp-for="@Model.Search.YoungerThan"></label>
                    <input class="form-control" asp-for="@Model.Search.YoungerThan" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label asp-for="@Model.Search.HealthRegion"></label>
                    <select class="form-control" asp-for="@Model.Search.HealthRegion" asp-items="@Model.HealthRegions.Select(hr => new SelectListItem(hr.Name, hr.Id.ToString(), hr.Id == null))"></select>
                </div>
            </div>
            <input type="submit" class="btn btn-primary" value="Search" />
            <input type="reset" class="btn btn-dark" value="Reset" />
        </form>
    </section>
    <section>
        @if (Model.Ins != default && Model.Ins.Count > 0)
        {
            <div>
                <div class="row">
                    <div class="col-sm-2 font-weight-bold">@medicDataLocalization.Get("EntryDate")</div>
                    <div class="col-sm-2 font-weight-bold">@medicDataLocalization.Get("SendDiagnoseCode")</div>
                    <div class="col-sm-4 font-weight-bold">@medicDataLocalization.Get("SendDiagnoseName")</div>
                    <div class="col-sm-2 font-weight-bold">@medicDataLocalization.Get("AdditionalDiagnoses")</div>
                    <div class="col-sm-1 font-weight-bold">@medicDataLocalization.Get("ViewPatient")</div>
                    <div class="col-sm-1 font-weight-bold">@medicDataLocalization.Get("ViewIn")</div>
                </div>
                @foreach (InPreviewViewModel currentIn in Model.Ins)
                {
                    <hr />
                    <div class="row">
                        <div class="col-sm-2">@currentIn.EntryDate.ToShortDateString()</div>
                        <div class="col-sm-2">@currentIn.SendDiagnoseCode</div>
                        <div class="col-sm-4">@currentIn.SendDiagnoseName</div>
                        <div class="col-sm-2">@string.Join(", ", currentIn.CodeDiagnoses)</div>
                        <div class="col-sm-1">
                            <a asp-controller="@MedicBaseController.GetName(nameof(PatientController))"
                               asp-action="@nameof(PatientController.Patient)"
                               asp-route-id="@currentIn.PatientId" class="btn btn-info">@medicDataLocalization.Get("View")</a>
                        </div>
                        <div class="col-sm-1">
                            <a asp-controller="@MedicBaseController.GetName(nameof(InController))"
                               asp-action="@nameof(InController.In)"
                               asp-route-id="@currentIn.Id"
                               class="btn btn-default">@medicDataLocalization.Get("View")</a>
                        </div>
                    </div>
                }
            </div>
            <footer>
                <pager page-count="@pagesCount"
                       current-page="@Model.CurrentPage"
                       controller-name="@MedicBaseController.GetName(nameof(InController))"
                       action-name="@nameof(InController.Index)"
                       additional-properties="@paramsByName"
                       nav-class-names="btn-toolbar"
                       ul-class-names="pagination"
                       li-class-names="page-item"
                       li-selected-class-names="page-item active"
                       anchor-class-names="page-link">

                </pager>
            </footer>
        }
        else
        {
            <div class="text-center text-info font-weight-bold">@medicDataLocalization.Get("NoResults")</div>
        }
    </section>
</article>