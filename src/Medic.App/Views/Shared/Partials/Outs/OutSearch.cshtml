@using Medic.AppModels.Outs
@using Medic.AppModels.Sexes
@using Medic.AppModels.HealthRegions
@using Medic.AppModels.UsedDrugs

@model OutSearch

@{
    List<SexOption> sexes = ViewData[Constants.Sexes] as List<SexOption>;
    List<HealthRegionOption> healthRegions = ViewData[Constants.HealthRegions] as List<HealthRegionOption>;
    List<UsedDrugCodeOption> usedDrugs = ViewData[Constants.UsedDrugs] as List<UsedDrugCodeOption>;
}

<form asp-controller="@MedicBaseController.GetName(nameof(OutController))"
      asp-action="@nameof(OutController.Index)"
      method="get">
    <div class="row">
        <div class="form-group col-sm-4">
            <label asp-for="@Model.MainOutDiagnose"></label>
            <input class="form-control" asp-for="@Model.MainOutDiagnose" />
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.CountOfAdditionalOutDiagnoses"></label>
            <input class="form-control" asp-for="@Model.CountOfAdditionalOutDiagnoses" />
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.Sex"></label>
            <select class="form-control" asp-for="@Model.Sex" asp-items="@sexes.Select(s => new SelectListItem(s.Name, s.Id.ToString(), s.Id == Model.Sex))"></select>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            <label asp-for="@Model.UsedDrug"></label>
            <select class="form-control" asp-for="@Model.UsedDrug" asp-items="@usedDrugs.Select(udc => new SelectListItem(udc.Code, udc.Key, string.Equals(udc.Key, Model.UsedDrug, StringComparison.OrdinalIgnoreCase)))"></select>
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.SendDiagnose"></label>
            <input class="form-control" asp-for="@Model.SendDiagnose" />
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.CountOfAdditionalSendDiagnoses"></label>
            <input class="form-control" asp-for="@Model.CountOfAdditionalSendDiagnoses" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            <label asp-for="@Model.Age"></label>
            <input class="form-control" asp-for="@Model.Age" />
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.OlderThan"></label>
            <input class="form-control" asp-for="@Model.OlderThan" />
        </div>
        <div class="form-group col-sm-4">
            <label asp-for="@Model.YoungerThan"></label>
            <input class="form-control" asp-for="@Model.YoungerThan" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label asp-for="@Model.HealthRegion"></label>
            <select class="form-control" asp-for="@Model.HealthRegion" asp-items="@healthRegions.Select(hr => new SelectListItem(hr.Name, hr.Id.ToString(), hr.Id == Model.HealthRegion))"></select>
        </div>
    </div>
    <input type="hidden" asp-for="@Model.Order" />
    <input type="hidden" asp-for="@Model.Direction" />
    <input type="hidden" asp-for="@Model.Length" />
    <input type="submit" class="btn btn-primary" value="Search" />
    <input type="reset" class="btn btn-dark" value="Reset" />
</form>